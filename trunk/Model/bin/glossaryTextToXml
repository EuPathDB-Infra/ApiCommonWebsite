#!/usr/bin/perl
use strict;

my $glossaryTabFile = $ARGV[0];
&usage() unless $glossaryTabFile;

open(FILE, $glossaryTabFile) || die "can't open file '$glossaryTabFile'\n";

# firt pass, make hash
my $glossHash;
my $glossArray;
while(<FILE>) {
    chomp;
    my ($term,$def) = split(/\t/);
    next unless $term;
    $glossHash->{$term} = $def;
    push(@$glossArray, $term);
}

# embed links in definitions where they include references to other terms
print qq{<?xml version="1.0" encoding="UTF-8"?>

<!-- DO NOT EDIT THIS FILE!!  see ../glossary_README.txt  -->

<xmlAnswer>
};

foreach my $term (@$glossArray) {

    # make links pointing to other entries in the glossary
    # do it in two passes to avoid embedding links into links
    my @termsSortedByLength = sort { length($a) > length($b) } @$glossArray;
    my %tempReplacementsHash;
    my $termsFoundCount;
    # first pass: find all terms, and replace them w/ a temp place holder
    foreach my $term2 (@termsSortedByLength) {
	next if $term2 eq $term;
	next if $term2 eq 'Gene';  # just too common 
	$termsFoundCount++;
	# in following regex, avoid making substitution into hyper links
	# and, handle case insensitivity and simple plurals
	# also, only find the first occurance so as not to bore the user
        # finding first also has the benefit of not finding terms embedded in hyperlinks (which
        # in practice always come after real terms) 
	if ($glossHash->{$term} =~ /\b($term2)(s?)\b/i) {
	    my $foundTerm ="$1$2"; 
	    my $tempReplacement = "FOUNDTERM_${termsFoundCount}_";
	    $tempReplacementsHash{$tempReplacement} = "<a href=\"#$term2\">$1$2<\/a>";
	    $glossHash->{$term} =~ s/$foundTerm/$tempReplacement/;
	}
    }
    # second pass: replace temp place holders with links
    foreach my $tempReplacement (keys %tempReplacementsHash) {
	$glossHash->{$term} =~ s/$tempReplacement/$tempReplacementsHash{$tempReplacement}/;
    }
    
    my $wdkString = qq{
   <record>
       <attribute name="term">$term</attribute>
       <attribute name="definition">
         <![CDATA[
$glossHash->{$term}
          ]]>
       </attribute>
    </record>

};
    print $wdkString;
}

print "</xmlAnswer>\n";

sub usage {
    print "
convert glossary file in tab-delimited text to wdk record xml

usage:glossaryTextToXml tabfile

";
    exit(1);
}
