-- This SQL script can be used both to create a GBROWSE_USERS schema
-- and to create the necessary tables and sequence for allowing session
-- and account management for WDK users in PostgreSQL.

CREATE TABLE ${USER_SCHEMA_KEY}DBINFO (
    SCHEMA_VERSION INTEGER
);

INSERT INTO ${USER_SCHEMA_KEY}DBINFO ( SCHEMA_VERSION ) VALUES ( 4 );

CREATE TABLE ${USER_SCHEMA_KEY}OPENID_USERS (
    USERID     INTEGER,
    OPENID_URL VARCHAR(128) NOT NULL,
    CONSTRAINT OPENID_USERS_PK PRIMARY KEY (OPENID_URL)
);

CREATE TABLE ${USER_SCHEMA_KEY}SESSION_TBL (
    USERID    INTEGER NOT NULL,
    UPLOADSID VARCHAR(32),
    SESSIONID VARCHAR(32),
    USERNAME  VARCHAR(32),
    CONSTRAINT SESSION_TBL_PK PRIMARY KEY (USERID)
);

CREATE TABLE ${USER_SCHEMA_KEY}SESSIONS (
    ID VARCHAR(32) NOT NULL,
    A_SESSION TEXT NOT NULL,
    CONSTRAINT SESSIONS_PK PRIMARY KEY (ID)
);

CREATE TABLE ${USER_SCHEMA_KEY}SHARING (
    USERID    INTEGER,
    IS_PUBLIC INTEGER,
    TRACKID   VARCHAR(32)
);

CREATE TABLE ${USER_SCHEMA_KEY}UPLOADS (
    USERID         INTEGER,
    SHARING_POLICY VARCHAR(36),
    DESCRIPTION TEXT,
    TRACKID VARCHAR(32) NOT NULL,
    MODIFICATION_DATE TIMESTAMP,
    CREATION_DATE TIMESTAMP,
    PUBLIC_COUNT INTEGER,
    IMPORTED     INTEGER,
    PATH         VARCHAR(1024),
    DATA_SOURCE  VARCHAR(1024),
    TITLE        VARCHAR(1024),
    CONSTRAINT UPLOADS_PK PRIMARY KEY (TRACKID)
);

CREATE TABLE ${USER_SCHEMA_KEY}USERS (
    LAST_LOGIN TIMESTAMP,
    PASS     VARCHAR(50),
    USERID   INTEGER NOT NULL,
    REMEMBER INTEGER,
    CREATED TIMESTAMP,
    EMAIL       VARCHAR(64),
    OPENID_ONLY INTEGER,
    CONFIRMED   INTEGER,
    GECOS       VARCHAR(64),
    CNFRM_CODE  VARCHAR(32),
    CONSTRAINT USERS_PK PRIMARY KEY (USERID)
);

CREATE SEQUENCE ${USER_SCHEMA_KEY}GBROWSE_UID_SEQ
    MINVALUE 1 NO MAXVALUE
    INCREMENT BY 1 START WITH 1
    NO CYCLE;
