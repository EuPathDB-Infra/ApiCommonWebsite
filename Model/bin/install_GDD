#!/bin/bash

# Unpack and install R GDD library from ApicommonWebsite archived 
# files.

# Requires same webPropFile used in WDK build

GDD_TAR_PATH=$PROJECT_HOME/ApiCommonWebsite/Site/doc/R

# only approved paths
PATH=/usr/local/bin:/usr/bin:/bin

unset R_HOME;

# search for an R compiled for system architecture (e.g. i686, x86_64)
set_R_path() {
    local binlist="$(type -ap R)"
    local arch=$(uname -a)    

    while read r_path; do 
        r_arch="$($r_path --vanilla --slave < <(echo 'R.Version()$arch') | cut -d'"' -f2)"
        
        if [[ "$arch" =~ "$r_arch" ]]; then
            export R_CMD=$r_path
            echo "Using '$R_CMD'"
            return
        fi

    done < <(echo "$binlist")

    echo "FATAL: Required R version for $arch was not found. I looked at " >&2
    echo "$binlist" >&2
    exit 1    
}

set_GDD_version() {
    local gdd_tar_path=$GDD_TAR_PATH
    local r_version=$($R_CMD --vanilla --slave < <(echo 'R.Version()$"svn rev"') | cut -d'"' -f2)

    case $r_version in
    # 2.5.1 or 2.6.1
    '42083' | '43537')
        GDD_TAR_FILE="$gdd_tar_path/GDD_0.1-7.tgz";;
    # 2.10.0
    '50208')
        GDD_TAR_FILE="$gdd_tar_path/GDD_0.1-13.tar.gz";;
    *)
        echo "Unknown R version. Defaulting to latest tested GDD"
        GDD_TAR_FILE="$gdd_tar_path/GDD_0.1-13.tar.gz";;
    esac
}

get_install_paths() {
    WEB_PROP_FILE=$1
    if [ ! -e "$WEB_PROP_FILE" ]; then
        echo
        echo "specified webPropFile '$WEB_PROP_FILE' not found"
        echo
        exit 1
    fi
    source $WEB_PROP_FILE
}

mkdirs() {
    mkdir -p $cgilibTargetDir/R 2>/dev/null
}

install() {
    test -x "$(which R 2>&-)" || {
        echo
        echo R not found
        echo
        exit 1
    }
    
    mkdirs
    
    $R_CMD CMD INSTALL "$GDD_TAR_FILE" -l "$cgilibTargetDir/R"
    
    if [ "$?" -gt 0 ]; then
        echo
        echo "installation failed. unable to continue."
        echo
        exit 1
    fi
    
    basefontmapping
}

basefontmapping() {
    mapfile="$cgilibTargetDir/R/GDD/fonts/basefont.mapping"
    
    test -e $mapfile && mv $mapfile "${mapfile}.dist"
    
    cat > $mapfile <<FONTMAP
# Font mappings for GDD
#-----------------------

# Default install for EuPathDB project. See
# basefont.mapping.dist for full example.

base.norm:blue highway free.ttf
base.bold:blue highway free bold.ttf
base.bold:blue highway free.ttf
base.ital:blue highway free.ttf
base.bita:blue highway free bold.ttf
base.bita:blue highway free.ttf
FONTMAP
}

usage() {
    echo
    echo $"Usage: $(basename $0) /path/to/webapp.prop install"
    echo
    exit 1
}

##################################################################

if [ -z "$1" ] || [ -z "$2" ]; then
    usage
fi

get_install_paths $1

case "$2" in
    install)
        set_R_path
        set_GDD_version
        install
        ;;
    *)
        usage
        ;;
esac

exit 0
