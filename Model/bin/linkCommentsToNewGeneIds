#!/usr/bin/perl

# let comments follow gene ID changes, by using info from GeneId in the
# component instance to insert data into CommentStableId in the comment database

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use DBI;
use ApiCommonWebsite::Model::ModelConfig;

if (!$ARGV[0]) {die "usage: linkCommentsToNewGeneIds modelName\n";}
my $model = $ARGV[0];

my $c = new ApiCommonWebsite::Model::ModelConfig($model);


my $dbh = DBI->connect(
    $c->getDbiDsn,
    $c->getLogin,
    $c->getPassword,
    { PrintError => 1,
      RaiseError => 0
    }
) or die "Can't connect to the database: $DBI::errstr\n";;

my $rows = $dbh->do(<<SQL);
insert into comments2.CommentStableId\@apidb.login_comment
            (stable_id, comment_id, comment_stable_id) -- shouldn't that be "comment_stable_id_id"?
select gene, comment_id, comments2.CommentStableId_pkseq.nextval\@apidb.login_comment
from (  select gi.gene, comment_id
        from apidb.GeneId gi,
             (  select stable_id, comment_id
                from comments2.comments\@apidb.login_comment
                where project_name in (select project_id from apidb.GeneAttributes)
              union
                select csi.stable_id, csi.comment_id
                from comments2.comments\@apidb.login_comment c, comments2.commentStableId\@apidb.login_comment csi
                where csi.comment_id = c.comment_id
                  and c.project_name in (select project_id from apidb.GeneAttributes)) apicomm_pairs
        where apicomm_pairs.stable_id = gi.id
      minus
        (  select stable_id, comment_id from comments2.comments\@apidb.login_comment
         union
           select stable_id, comment_id from comments2.commentStableId\@apidb.login_comment))
SQL

print "inserted $rows rows into CommentStableId\n";
