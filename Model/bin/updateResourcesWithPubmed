#! /usr/bin/perl


use lib "$ENV{PROJECT_HOME}/ApiCommonData/Load/lib/perl";
use pcbiPubmed;
use XMLUtils;
use strict;
                                                                            
my $publicationTag = "publication";
my $pmidAttr = "pmid";

my $pubDetails = "pmdetails";
my $pubTitle = "pmtitle";
my $pubAuthors = "pmauthors";
#my $pubUrl = "pubUrl";
                                                                            
my $input_file = $ARGV[0];
my $output_file = $ARGV[1];
                                                                            
open (INPUT, "< $input_file")
    or die "\nUnable to open input file: $!\n" . usageStr();
                                                                            
my $content = join ("", <INPUT>);
close INPUT;
                                                                            
my $modifiedXml = XMLUtils::replaceAllTags ($content, $publicationTag, \&updatePubmedInfo);

#print OUTPUT $modifiedXml;
print $modifiedXml;
                                                                            
#close OUTPUT;

sub updatePubmedInfo {
	my ($tagContent) = @_;
	#my $pubDetailsValue = XMLUtils::getAttrValue ($tagContent, $publicationTag, $pubDetails);
	#don't do anything if the values already exist.
	#if ($pubDetailsValue) {
	#	return $tagContent;
	#}

	my $pubmed_id = XMLUtils::getAttrValue ($tagContent, $publicationTag, $pmidAttr);
	my $modified_tag = "<" . $publicationTag . " pmid=\"$pubmed_id\"";
	pcbiPubmed::setPubmedID ($pubmed_id);
	$modified_tag .= " $pubDetails=\"" . pcbiPubmed::fetchPublication() . "\"";
	$modified_tag .= " $pubTitle=\"" . pcbiPubmed::fetchTitle() . "\"";
	$modified_tag .= " $pubAuthors=\"" . pcbiPubmed::fetchAuthorList() . "\"/>";
	# $modified_tag .= XMLUtils::encloseTag (pcbiPubmed::fetchPubmedUrl(), $pubUrl) . "\n";
	# $modified_tag .= "</" . $publicationTag . ">";
	
	#print "BEGIN: " . $pubmed_id . ("-" x 50) . "\n";
	#print $modified_tag . "\n";
	#print "END: " . $pubmed_id . ("-" x 50) . "\n\n\n";
	return $modified_tag;
}

sub usageStr {
	return "Usage: $0 <input_resources.xml>\n\n"
	. "  The program takes a Resources.xml file as input, updates the\n"
	. "  supporting publication references with the corresponding\n"
	. "  details from PubMed, and writes the resulting xml to STDOUT\n\n"; 
}

                                                                            

